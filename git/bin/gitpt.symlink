#!/usr/bin/env ruby

require 'rubygems'
require 'highline'
require 'pivotal-tracker'


token = File.read(File.join(ENV['HOME'], '.pt_token'))

unless token and token.size > 10
  say "Sorry, I could not find a token in ~/.pt_token."
  exit 1
end

PivotalTracker::Client.token = token
PivotalTracker::Client.use_ssl = true


project_id = File.read('.pt_project_id').to_i

unless project_id and project_id > 0
  say "Sorry, I could not find a project_id in .pt_project_id."
  exit 1
end

project = PivotalTracker::Project.find(project_id)

started_and_finished_stories = project.stories.all(:state => 'started,finished')

highline = HighLine.new

selected_story = nil

puts
highline.choose do |menu|
  menu.header = "Choose a story"
  started_and_finished_stories.each do |story|
    menu.choice(story.name) { selected_story = story }
  end
  menu.hidden('')
end

if selected_story
  puts
  message = highline.ask('Add a message')
  puts message

  commit_message = "[##{selected_story.id}] #{selected_story.name}"
  if message.strip != ''
    commit_message << ' - '<< message.strip
  end

  exec('git', 'commit', '-m', commit_message)
end
